Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7]
Soln: [
        [3],
        [9,20],
        [15,7]
      ]
      
  
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root==NULL) return res;
	    queue<TreeNode*> Q;
	    Q.push(root);
	    while(!Q.empty()){
            vector<int> res1;
            int q_size=Q.size();
            while(q_size--){
                TreeNode* current=Q.front();
                Q.pop();
                if(current->left!=NULL) Q.push(current->left);
                if(current->right!=NULL) Q.push(current->right);
                res1.push_back(current->val);
            }
            res.push_back(res1);   
        }
       return res; 
    }
};
