Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

class Solution {
public:
  vector<vector<int>> ans;
	vector<int> path;
	void dfs(vector<int>& nums, int index,vector<int>& path){
		if(index>nums.size()) return;
		ans.push_back(path);
		for(int i=index;i<nums.size();i++){
			path.push_back(nums[i]);
			dfs(nums,i+1,path);
			path.pop_back();
		}
	}
  vector<vector<int>> subsets(vector<int>& nums) {
      dfs(nums,0,path);
		  return ans;
    }
};
